# docker-compose.yml

networks:
    my_network:

volumes:
    db_volume:
        driver: local
        driver_opts:
            type: none
            device: ./database
            o: bind
    shared_volume:
        driver: local
        driver_opts:
            type: none
            device: ./shared_volume
            o: bind

services:
    frontend:
        container_name: frontend
        build:
            context: ..
            dockerfile: build/frontend/Dockerfile
        restart: unless-stopped
        command: /bin/sh /etc/nginx/launch.sh
        ports:
            - 8000:80
        volumes:
            - shared_volume:/shared
        networks:
            - my_network

    backend:
        container_name: backend
        build:
            context: ..
            dockerfile: build/backend/Dockerfile
        restart: unless-stopped
        command: npm run start:backend
        env_file: ./backend/.env
        volumes:
            - db_volume:/app/database
        ports:
            - 8080:8080
        networks:
            - my_network

    tunnel:
        container_name: tunnel
        image: debian:bookworm-slim
        restart: unless-stopped
        command: bash -c "apt-get update && apt-get install -y wget && wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /usr/local/bin/cloudflared && chmod +x /usr/local/bin/cloudflared && cloudflared tunnel --url http://frontend:80 2>&1 | tee /shared/tunnel.log"
        volumes:
            - shared_volume:/shared
        networks:
            - my_network
